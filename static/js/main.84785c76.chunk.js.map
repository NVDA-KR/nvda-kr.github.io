{"version":3,"sources":["page/index.js","common_components/Navigation.js","page/page.NotFound.js","page/PageRouter.js","page/page.home.js","common_components/prettyList.js","page/page.about.js","page/page.forum.js","common_components/accordionButton.js","common_components/textFormat.js","page/page.down.js","page/info.PageRoute.js","common_components/index.js","common_components/pageTopBar.js","common_components/pageBottomBar.js","common_components/RegionShuttle.js","App.js","reportWebVitals.js","index.js"],"names":["PageNavLink","props","to","exact","menuText","Navigation","PageList","map","el","idx","undefined","link_exact","defaultProps","PageNotFound","pageTitle","className","href","Pager","pathName","useParams","path","current","component","title","page","useEffect","timeout","PageAnnouncer","document","body","querySelector","innerHTML","setTimeout","clearTimeout","Helmet","SubPage","AboutPage","AboutSR","Home","useRouteMatch","url","HomeRoute","PrettyUl","children","PrettyLi","role","aria-hidden","About","style","verticalAlign","AboutForum","target","Accordion","ButtonSlot","expanded","ButtonClassName","ContainerComponentSlot","ContentBoxClassName","setSymbols","useSymbol","ExitButtonInnerHTML","useExitButton","useState","getExpandedState","setExpandedState","getUseStateSymbol","getUseExitButton","EntranceButtonRef","createRef","ref","onClick","aria-expanded","e","focus","TextIcon","iconName","iconAlt","A11yText","EM","DownloadPage","MinorVersionInfo","Narrator_StepForInstall","class","VersionDownloader","inputValue","vYear","vSubMajor","typeCheck","allowChar","isUrlAvailable","setUrlAvailable","getButtonDisabledState","setButtonDisabled","announcement","text","runnable","element","checkManually","evt","value","nativeEvent","TextStructure","exec","startDownload","eventType","type","key","window","open","htmlFor","aria-describedby","placeholder","id","onInput","data","isAllowedChar","test","substring","length","onFocus","onKeyDown","onBlur","disabled","aria-live","MainRoute","Download","HomeSub","Landmarks","TopBar","BottomBar","RegionShuttleLink","DestinationHash","LinkId","SkipNavigation","isFocusIn","setFocusIn","getFocusInStateClass","classList","toggle","App","tabIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84785c76.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nconst PageNavLink = (props) =>{\r\n  return (\r\n    <NavLink to={props.to} exact={props.exact}>{props.menuText}</NavLink>\r\n  )\r\n}\r\n\r\nexport {PageNavLink};","import {PageNavLink} from '../page';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navigation = ({PageList}) => {\r\n  return (\r\n    <ul>\r\n        {\r\n          PageList.map((el,idx)=>{\r\n            if(el.menuText !== undefined){\r\n              return <li key={idx}>\r\n                <PageNavLink to={el.to} exact={el.link_exact} menuText={el.menuText} />\r\n              </li>\r\n            }else{\r\n              return;\r\n            }\r\n          })\r\n        }\r\n    </ul>\r\n  )\r\n}\r\n\r\nNavigation.defaultProps = {\r\n  PageList:[]\r\n}\r\nNavigation.propTypes = {\r\n  PageList:PropTypes.array\r\n}\r\n\r\nexport {Navigation};","\r\nconst PageNotFound = ({pageTitle}) =>{\r\n    return (\r\n        <div className=\"text center large\">\r\n            <p>\r\n                앗... 이런, 페이지를 찾지 못했네요. :(\r\n            </p>\r\n            <a href=\"/home/aboutPage\">홈으로</a>\r\n        </div>\r\n    )       \r\n}\r\n\r\nexport default PageNotFound;","import { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {useParams} from \"react-router\";\r\nimport PageNotFound from \"./page.NotFound\";\r\nconst Pager = ({\r\n    PageList\r\n})=>{\r\n    const params = useParams();\r\n    const pathName = params.path;\r\n    const Error404 = {\r\n        component:PageNotFound,\r\n        title:\"NVDA 한국 - 페이지 찾을 수 없음\",\r\n    }\r\n\r\n    let current = Error404;\r\n    for( const page of PageList ){\r\n        if(page.path === pathName){\r\n            current = page;\r\n            break;\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let timeout;\r\n        const PageAnnouncer = document.body.querySelector('#PageAnnouncer');\r\n        PageAnnouncer.innerHTML = `페이지 로드됨 : ${current.title}`;\r\n        timeout = setTimeout(()=>{\r\n          clearTimeout(timeout);\r\n          PageAnnouncer.innerHTML = '';\r\n        },100)\r\n      },[current])\r\n    \r\n    return ( \r\n        <>\r\n        <Helmet title={current.title} />\r\n        <current.component />\r\n        </>\r\n    )\r\n}\r\nexport default Pager;","import React from 'react';\r\nimport {Route, BrowserRouter as Router, useRouteMatch } from 'react-router-dom';\r\nimport { HomeRoute } from './info.PageRoute';\r\nimport { Navigation } from '../common_components/Navigation';\r\nimport Pager from \"./PageRouter\";\r\nconst Home = () => {\r\n  let {url,path} = useRouteMatch();\r\n  return (\r\n    <Router>\r\n    <div className=\"main-body page-intro\">\r\n      <nav>\r\n        <h2 className=\"invisible-a11y\">하위 메뉴</h2>\r\n        <Navigation PageList={HomeRoute(url)} />\r\n      </nav>\r\n      <article>\r\n          <Route path={`${path}/:path`}>\r\n            <Pager PageList={HomeRoute()} />\r\n          </Route>\r\n      </article>\r\n    </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nconst AboutPage=()=>{\r\n  return (\r\n    <article>\r\n      <h2>NVDA 한국 페이지는?</h2>\r\n      <p>\r\n        NVDA 한국 페이지는 <strong>\r\n        대한민국 사람, 한국어를 사용하는 누구나 쉽게 NVDA 스크린리더에 접근하고, 알아가는 곳\r\n        </strong>입니다.\r\n      </p>\r\n      <p>\r\n        또한, NVDA의 보급 뿐만 아니라, 스크린리더를 모르는 대중에 <strong>소리로 듣고 컴퓨터를 사용하는 새로운 세상, 경험</strong>을\r\n        선사하는 것을 목표로 합니다.\r\n      </p>\r\n    </article>\r\n  )\r\n};\r\n\r\nconst AboutSR=()=>{\r\n  return (\r\n    <article>\r\n      <h2>스크린리더란?</h2>\r\n      <p>\r\n        스크린리더(Screen Reader)는 한자 표현으로 화면 낭독기라고도 합니다.\r\n      </p>\r\n      <p>\r\n        화면의 컨텐츠를 읽는 데에 어려움을 겪거나, 읽지 못하는 사람이 소리를 통해\r\n        컴퓨터를 사용할 수 있도록 소리와 음성으로 듣고, 주로 키보드를 사용하여 컴퓨터를 사용하는 소프트웨어입니다.\r\n      </p>\r\n      <h3>스크린리더의 종류</h3>\r\n      <p>\r\n        스크린리더는 매우 다양한 운영체제에서 지원하거나, 개발되어 있습니다.\r\n      </p>\r\n      <p>\r\n      우리가 가장 많이 사용하는 Windows에는 Windows의 내장 스크린리더, 내레이터(Narrator)가 있으며, 세계적으로 유명한 JAWS와\r\n        NVDA가 있습니다.\r\n      </p>\r\n      <p>\r\n        국내의 스크린리더로 센스리더(Sense Reader)가 가장 많이 알려져 있습니다.\r\n      </p>\r\n      <p>또한 Talkback, VoiceOver, ChromeVox, 모바일을 포함한 다양한 유닉스, 리눅스, 브라우저에서\r\n      스크린리더를 지원하여, 화면을 보거나 읽을 수 없는 사용자가 다양한 기기를 사용할 수 있습니다.</p>\r\n    </article>\r\n  )\r\n};\r\n\r\nexport const SubPage = {\r\n  AboutPage,\r\n  AboutSR,\r\n}\r\n\r\nexport default Home;","const PrettyUl = ({children})=>{\r\n    return (\r\n        <ul className=\"pretty-ul\">\r\n            {children}\r\n        </ul>\r\n    );\r\n}\r\nconst PrettyLi = ({children})=>{\r\n    return (\r\n        <li>\r\n            <span role=\"none\" className=\"li-bullet\" aria-hidden=\"true\">\r\n                {/*Do not write the component and tag here*/}\r\n            </span>\r\n            <span role=\"none\" className=\"li-text\">\r\n                {children}\r\n            </span>\r\n        </li>\r\n    );\r\n}\r\nexport {PrettyLi,PrettyUl};","import {PrettyLi as Li, PrettyUl as Ul} from \"../common_components/prettyList\";\r\nconst About = () => {\r\n  return (\r\n    <div className=\"main-body about-nvda\">\r\n      <article>\r\n        <h2>NVDA는?</h2>\r\n        <p>NVDA는 Non-Visual Desktop Access의 약자로, 호주의 비영리 단체인 NVAccess에서 만든 Python 컴퓨터 언어 기반의 오픈소스(OpenSource) 무료 스크린리더입니다.</p>\r\n        <p>NVDA는 전 세계적으로 널리 사용하는 무료 스크린리더로, Windows 컴퓨터가 있는 어디서나 쉽고 간편하게 설치하여 사용할 수 있습니다.</p>\r\n        <section>\r\n          <h3>NVDA의 기능</h3>\r\n          <aside className=\"type info\">\r\n            <h4>안내</h4>\r\n            <p>본 기능 소개는 NVAccess에서 제공하는 기능 소개에서 번역된 글입니다.</p>\r\n          </aside>\r\n          <p>NVDA는 시력이 나쁘거나, 눈이 전혀 보이지 않는 사용자가 Windows 운영체제와 서드파티 응용프로그램에 접근하고, 상호작용할 수 있도록 합니다.</p>\r\n          <p>주요 특징은 다음과 같습니다.</p>\r\n          <Ul>\r\n            <Li>\r\n              Google Chrome이나 Mozila Firefox같은 웹브라우저, 이메일 클라이언트, 인터넷 채팅 소프트웨어, 미디어 플레이어, Microsoft의 Word나 Excel같은 오피스 프로그램을 포함한 \r\n              인기있는 응용프로그램을 지원합니다.\r\n            </Li>\r\n            <Li>\r\n              내장된 음성 합성 엔진이 50개 이상의 언어를 지원하며, 다양한 서드파티 음성을 지원합니다.\r\n            </Li>\r\n            <Li>\r\n              글자 서식이 있는 문서에서 폰트 이름, 글자 크기, 기타 스타일, 철자 오류 등, 글자의 서식을 안내합니다.\r\n            </Li>\r\n            <Li>마우스 커서 아래의 텍스트를 자동으로 읽어주며, 마우스 위치에 따라 다양한 방식으로 들을 수 있습니다.</Li>\r\n            <Li>점자 키보드가 있는 점자 디스플레이를 통한 점자 입력을 포함하는 많은 점자 디스플레이를 지원합니다.</Li>\r\n            <Li>설치할 필요 없이 USB 플래시 드라이브 또는 기타 휴대용 미디어에서 완전히 실행할 수 있습니다.</Li>\r\n            <Li>음성으로 안내되는 설치 프로그램으로 쉽게 접근할 수 있습니다.</Li>\r\n            <Li>50개국 이상의 언어로 번역되었습니다.</Li>\r\n            <Li>32비트, 64비트 환경의 최신 Windows 운영체제를 모두 지원합니다.</Li>\r\n            <Li>잠금 화면이나 Windows 로그온 화면에서도 동작합니다.</Li>\r\n            <Li>터치 스크린의 제스처를 통해 컨트롤 요소와 텍스트를 읽고, 사용할 수 있습니다.</Li>\r\n            <Li>선택적인 전화 지원 및 포괄적인 교육 자료를 매우 저렴한 비용으로 이용할 수 있습니다.</Li>\r\n            <Li>\r\n              <div>\r\n                열정적인 사용자 커뮤니티를 활용하여 도움을 받을 수 있습니다.\r\n                <a href=\"/forum\" className=\"block\">\r\n                  <span style={\r\n                    {\r\n                      verticalAlign:'middle'\r\n                    }\r\n                  } className=\"icon-nvda\"></span>\r\n                  한국 사용자 커뮤니티 알아보기\r\n                </a>\r\n              </div>\r\n              \r\n            </Li>\r\n          </Ul>\r\n        </section>\r\n      </article>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About;","const AboutForum=()=>{\r\n    return  (\r\n        <div className=\"page-main forum\">\r\n            \r\n            <article className=\"forum-intro\">\r\n                <div className=\"text center wide-margin\">\r\n                    <h2>NVDA 한국 사용자 포럼 소개</h2>\r\n                    <p className=\"text middle\">NVDA 한국 사용자 포럼을 소개합니다.</p>\r\n                    <p>\r\n                    NVDA는 여러 번역자의 손을 거처 한국인이 사용하기에 무리가 없도록\r\n                    한글로 번역되었습니다.</p>\r\n                    <p>\r\n                    NVDA는 여전히 널리 알려질 필요가 있으나, NVDA의 커뮤니티는 영어를 사용하므로\r\n                    언어라는 벽이 우리를 가로막습니다.\r\n                    </p>\r\n                    <p>\r\n                    한국 사람과 NVDA 사이의 벽을 허물어 줄 열정적인 NVDA 한국 사용자 포럼을 소개합니다.\r\n                    </p>\r\n                    <section>\r\n                        <h3>Facebook 포럼</h3>\r\n                        <p>NVDA 한국 사용자 포럼은 다양한 사람이 쉽게 접근할 수 있도록\r\n                        대중적으로 공개된 Facebook 그룹 플랫폼을 사용합니다.</p>\r\n                        \r\n                        <a href=\"https://www.facebook.com/groups/nvdakr/\"\r\n                        className=\"button-style facebook\">\r\n                            <span className=\"icon-facebook\"></span>\r\n                            facebook\r\n                            <span className=\"text block smaller\">\r\n                            NVDA 한국 사용자 포럼 바로가기\r\n                            </span>\r\n                        </a>\r\n                        <p>포럼은 다양한 사람이 함께하는 공간이므로 반드시 <a href=\"https://www.facebook.com/groups/nvdakr/about\" target=\"_blank\">Facebook 포럼 정보</a>의 규칙 섹션을 준수하시기 바랍니다.</p>\r\n                    </section>\r\n                </div>\r\n            </article>\r\n        </div>\r\n    )\r\n}\r\nexport default AboutForum;","import { createRef, useState } from \"react\";\r\nconst DefaultComponent = ()=>{\r\n    return (\r\n        <div>\r\n            Accordion Content가 설정되지 않았습니다.\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Accordion = ({\r\n    ButtonSlot,\r\n    expanded,\r\n    ButtonClassName,\r\n    ContainerComponentSlot,\r\n    ContentBoxClassName,\r\n    setSymbols,\r\n    useSymbol,\r\n    ExitButtonInnerHTML,\r\n    useExitButton\r\n})=>{\r\n    const [getExpandedState,setExpandedState]=useState(expanded);\r\n    const [getUseStateSymbol,setUseStateSymbol]=useState(useSymbol);\r\n    const [getUseExitButton,setUseExitButton] =useState(useExitButton);\r\n    const toggleExpandState = ()=>{\r\n        setExpandedState(!getExpandedState);\r\n    }\r\n    const EntranceButtonRef = createRef();\r\n    return (\r\n        <section>\r\n            <button ref={EntranceButtonRef} onClick={toggleExpandState} aria-expanded={getExpandedState} className={ButtonClassName}>\r\n                <span className=\"slot-button-text\">{ButtonSlot}</span>\r\n                {\r\n                    (()=>{\r\n                        if(getUseStateSymbol){\r\n                            if(getExpandedState){\r\n                                return (\r\n                                    <span aria-hidden={true} className=\"state-symbol\">{setSymbols[1]}</span>\r\n                                )\r\n                            }else{\r\n                                return (\r\n                                    <span aria-hidden={true} className=\"state-symbol\">{setSymbols[0]}</span>\r\n                                )\r\n                            }\r\n                        }\r\n                    })()\r\n                }\r\n            </button>\r\n            <div className={ContentBoxClassName}>\r\n                {\r\n                    (()=>{\r\n                        if(getExpandedState === true){\r\n                            return (\r\n                                <>\r\n                                <ContainerComponentSlot />\r\n                                {(()=>{\r\n                                    if(getUseExitButton === true){\r\n                                        return (\r\n                                            <button onClick={(e)=>{\r\n                                                setExpandedState(false);\r\n                                                const focus = EntranceButtonRef.current;\r\n                                                setTimeout(()=>{\r\n                                                    focus.focus();\r\n                                                },200)\r\n                                            }} className=\"fency-button accordion-close\">{ExitButtonInnerHTML}</button>\r\n                                        )\r\n                                    }else{\r\n                                        return;\r\n                                    }\r\n                                })()}\r\n                                </>\r\n                            )\r\n                        }else{\r\n                            return (\r\n                                <>\r\n                                </>\r\n                            );\r\n                        }\r\n                    })()\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nAccordion.defaultProps = {\r\n    expanded:false,\r\n    ButtonClassName:\"fency-button nvda-kr-accordion round-normal size-normal\",\r\n    ContentBoxClassName:\"accordion-content-box\",\r\n    ButtonSlot:\"set your button content\",\r\n    useSymbol:false,\r\n    useExitButton:false,\r\n    ExitButtonInnerHTML:\"닫기\",\r\n    setSymbols:[\r\n        <>펼치기</>,\r\n        <>접기</>\r\n    ],\r\n    ContainerComponentSlot:DefaultComponent,\r\n}\r\n\r\nexport default Accordion;","const TextIcon = ({iconName,iconAlt}) => {\r\n    return (\r\n        <span role=\"none\" className={`text text-icon bold icon-${iconName}`}>\r\n            <A11yText>{iconAlt}</A11yText>\r\n        </span>\r\n    )\r\n}\r\nTextIcon.defaultProps={\r\n    iconAlt:\"\",\r\n}\r\n\r\nconst A11yText = ({children}) => {\r\n    return (\r\n        <span role=\"none\" className=\"invisible-a11y\">\r\n            {children}\r\n        </span>\r\n    )\r\n}\r\n\r\nconst EM = ({children})=>{\r\n    return (\r\n        <span role=\"none\" className=\"text bold color-emphasis\">\r\n            {children}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport {EM,A11yText,TextIcon};","import { useState } from \"react\";\r\nimport Accordion from \"../common_components/accordionButton\";\r\nimport {PrettyLi as Li, PrettyUl as Ul} from \"../common_components/prettyList\";\r\nimport {A11yText, EM, TextIcon} from \"../common_components/textFormat\";\r\n\r\nconst DownloadPage = () => {  \r\n  return (\r\n    <div>\r\n    <h2>NVDA 다운로드 방법</h2>\r\n      <p>NVDA를 내려받는 방법은 두 가지가 있습니다. NVAccess 영문 홈페이지의 기본 NVDA와\r\n      경북점자도서관에서 사회복지공동모금회의 지원을 받아 만든 보이스위드 버전을 Wellbook 홈페이지에서 받으실 수 있습니다.</p>\r\n      <a className=\"button-style download nvaccess\" href=\"https://nvaccess.org/download#donateButton\">\r\n          <span aria-hidden={true} className=\"icon-nvda\"></span>\r\n        <span className=\"text-content block\">\r\n          <span className=\"text block small center\">\r\n            <span aria-hidden={true} className=\"logo nvaccess\"></span><b>NVAccess</b>에서\r\n          </span>\r\n          <span className=\"text block large center\">\r\n            NVDA 다운로드\r\n          </span>\r\n          <span className=\"text block smaller center bold\">\r\n            Windows 7 이상\r\n          </span>\r\n        </span>\r\n      </a>\r\n      <a className=\"button-style download wellbook\" href=\"https://nvda.or.kr/voicewith/\">\r\n        <span aria-hidden={true} className=\"icon-nvda\"></span>\r\n        <span className=\"text-content block\">\r\n          <span className=\"text block small center\">\r\n            <b>경북점자도서관 wellbook</b>에서\r\n          </span>\r\n          \r\n          <span className=\"text block large center\">\r\n            NVDA 다운로드\r\n          </span>\r\n          <span className=\"text block smaller center bold\">\r\n            보이스위드\r\n          </span>\r\n        </span>\r\n      </a>\r\n\r\n      <p>NVAccess는 영문 홈페이지이지이나, 설치 프로그램은 자동으로 언어를 인식하므로\r\n      한국어로 설치를 바로 진행하실 수 있으니 걱정하실 필요가 없습니다.</p>\r\n      <p>\r\n        보이스위드는 카카오톡 지원, 한글과 컴퓨터 NEO 지원, 타자연습과 독서기 등 몇 가지 추가기능과 Selvy TTS 음성 엔진이 포함된 페키지입니다.\r\n      </p>\r\n      <p>\r\n        보이스위드는 무료로 사용할 수 있으나, 타자연습, 독서기, 텔넷 프로그램 등은 경북점자도서관 Wellbook에 가입하여 컴퓨터를 인증해야 사용할 수 있으므로\r\n        사용할 때 참고하시기 바랍니다.\r\n      </p>\r\n\r\n      <aside>\r\n        <h3>시스템 사양</h3>\r\n        <p>NVDA는 다음과 같은 컴퓨터 부품, OS 환경부터 사용이 가능합니다.</p>\r\n        <table className=\"normal-style color-table default sys-req\">\r\n          <caption>최소 요구 사양</caption>\r\n          <colgroup>\r\n            <col className=\"first\" />\r\n            <col className=\"second\" />\r\n          </colgroup>\r\n          <tbody>\r\n            <tr className=\"column-header\">\r\n              <th>분류</th>\r\n              <th>사양</th>\r\n            </tr>\r\n            <tr>\r\n              <th>OS</th>\r\n              <td>\r\n                <Ul>\r\n                  <Li>최신버전은 Windows 7과 Windows Server 2008 Service Pack 1 부터 사용 가능</Li>\r\n                  <Li>Windows 7 미만의 Windows는 NVDA 2017.3을 별도로 설치하여 사용</Li>\r\n                </Ul>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>RAM</th>\r\n              <td>\r\n                <Ul>\r\n                  <Li>32bit: 256MB부터</Li>\r\n                  <Li>64bit: 4GB(4096MB)부터</Li>\r\n                </Ul>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>저장공간</th>\r\n              <td>\r\n                <Ul>\r\n                  <Li>최소 90MB의 저장공간 필요</Li>\r\n                </Ul>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </aside>\r\n\r\n      <section>\r\n        <h3>특정 버전 수동 설치하기</h3>\r\n        <p>\r\n          Windows XP 사용자와 같이 특별 특정 버전이 필요한 사용자 혹은 최신 기능에 대한 테스트가 필요한 개발자는 아래 버튼을 눌러 섹션을 확장하고,\r\n          해당하는 버전을 찾아 다운로드하세요.\r\n        </p>\r\n        <Accordion useSymbol={true}\r\n        ContainerComponentSlot={MinorVersionInfo}\r\n        ButtonSlot={\r\n        <>\r\n          <span className=\"text normal\">\r\n            NVDA 버전별 다운로드\r\n          </span>\r\n        </>\r\n        } />\r\n\r\n        <VersionDownloader />\r\n      </section>\r\n\r\n      <section>\r\n        <h3>NVDA 설치 가이드</h3>\r\n        <p>NVDA 설치 가이드는 NVAccess 메인 페이지에 접속하여 파일을 다운로드하고,\r\n         설치하는 모든 과정을 설명합니다. 아래 버튼을 눌러 내용을 확장하여 읽을 수 있습니다.</p>\r\n        <Accordion\r\n          useSymbol={true}\r\n          useExitButton={true}\r\n          ExitButtonInnerHTML=\"설치 가이드 닫기\"\r\n          ButtonClassName=\"fency-button round-normal size-normal nvda-kr-accordion\"\r\n          ButtonSlot={\r\n            <>Narrator로 따라하는 NVDA 다운로드 가이드</>\r\n          } ContainerComponentSlot={Narrator_StepForInstall}\r\n        />\r\n      </section>      \r\n    </div>\r\n  )\r\n}\r\n\r\nconst MinorVersionInfo = () => {\r\n  return (\r\n    <section className=\"accordion-section\">\r\n      <h3>특정 버전 다운로드</h3>\r\n      <p>구 버전의 Windows를 사용하거나, 개발, 새로운 기술의 빠른 경험을\r\n      원하는 분들을 위한 링크를 제공합니다.</p>\r\n      <Ul>\r\n        <Li><a href=\"https://www.nvaccess.org/download?nvdaVersion=2017.3\">Windows XP 사용자를 위한 NVDA 2017.3</a>: Windows XP는 NVDA 2017.3까지만 지원합니다. 누르면 바로 다운로드가 시작됩니다. 불가피하게 구 버전의 Windows를 사용할 수 있으나, 되도록 보안을 위해 Windows 10과 최신 NVDA 사용을 추천드립니다.</Li>\r\n        <Li><a href=\"https://www.nvaccess.org/files/nvda/snapshots/\">알파, 베타버전 다운로드(영문)</a>: NVDA의 최신 업데이트를 먼저 만나볼 수 있는 Beta와 Alpha 채널 버전 목록 페이지입니다. 최신기능을 먼저 만나볼 수 있으나, 개발자용 버전이므로 오류가 많이 발생한다는 것을 명심하고 사용하세요. Alpha와 Beta 목록은 제목 2로 시작하므로, 숫자 2 키를 눌러 탐색할 수 있습니다.</Li>\r\n        <Li><a href=\"https://www.nvaccess.org/category/news/releases/\">NVDA 버전 릴리즈 목록</a>: NVAccess의 버전 릴리즈 포스트 목록입니다. 받고 싶은 버전을 링크에서 선택하고, 포스트에서 \"Download NVDA {\"{버전명(예: 2020.4)}\"}\" 링크를 눌러 다운로드를 진행할 수 있습니다. </Li>\r\n      </Ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst Narrator_StepForInstall = () => {\r\n  return (\r\n    <section className=\"accordion-section\">\r\n      <h4>설치 따라하기</h4>\r\n      <p>※ 이 섹션은 NVAccess 다운로드 방법을 기준으로 설명합니다.</p>\r\n      <p>※ <EM>설치 따라하기</EM>는 컴퓨터를 처음 구입하여 아무런 소프트웨어가 없는\r\n      기본 프로그램만으로 설치하는 과정을 다룹니다.</p>\r\n      <p>※ Windows 10 최신 버전과 Windows의 기본 내장 스크린리더인 내래이터(Narrator), 최신의 Microsoft Edge로 적상된 매뉴얼입니다. \r\n      다른 스크린리더를 사용중이라면, 내레이터를 쓰지 않아도 좋습니다.</p>\r\n      <section>\r\n        <h5>STEP 1: NVAccess NVDA 다운로드 페이지 접속하기</h5>\r\n        <Ul>\r\n          <Li>\r\n          <EM>Control</EM> + <EM><TextIcon iconName=\"windows\" iconAlt=\"logo\" /></EM> + <EM>Enter</EM>\r\n            키를 눌러 내레이터를 시작하세요.\r\n          </Li>\r\n          <Li>\r\n            내레이터가 시작되면 내레이터 시작 창이 나타납니다. \r\n            내레이터 시작 창은 <EM>Alt</EM> + <EM>F4</EM> 키를 눌러 닫으면 내레이터가 꺼지므로, <EM>Alt</EM> + <EM>아래 화살표</EM>로 창을 내리거나, <EM>Alt</EM> + <EM>Tab</EM>으로 작업을 전환하거나, <EM><TextIcon iconName=\"windows\" iconAlt=\"logo\" /></EM> + <EM>D</EM> 또는 <EM><TextIcon iconName=\"windows\" iconAlt=\"logo\" /></EM> + <EM>M</EM>을 눌러 바탕화면으로 나와야 합니다.\r\n          </Li>\r\n          <Li>\r\n            <EM><TextIcon iconName=\"windows\" iconAlt=\"logo\" /></EM> 키 또는 <EM>Control</EM> + <EM>ESC</EM>를 눌러 시작 메뉴를 열고, <EM>Edge<span className=\"invisible-a11y\">철자: E d g e</span></EM>를 입력합니다. <EM>Microsoft Edge</EM>라고 읽어준다면 <EM>Enter</EM>를 눌러 Edge 브라우저를 실행합니다.\r\n          </Li>\r\n          <Li>\r\n          <EM>Alt</EM> + <EM>D</EM>키를 눌러 주소 편집창에 <EM>nvaccess.org\r\n            <A11yText>철자: N V A C C E S S dot O R G</A11yText>\r\n          </EM>\r\n            를 입력하고 <EM>Enter</EM> 키를 눌러 이동하세요.\r\n          </Li>\r\n          <Li>\r\n            주소를 입력하여 NVAccess에 접속했다면, Download 링크를 읽을 때까지 <EM>알파벳 K</EM>키로 탐색하세요. Download 링크를 읽어주면 <EM>Enter</EM> 키를 눌러 들어가세요.\r\n          </Li>\r\n        </Ul>\r\n      </section>\r\n\r\n      <section>\r\n        <h5>STEP 2: NVDA 설치파일 다운로드와 실행</h5>\r\n        <Ul>\r\n          <Li>\r\n            Download 페이지에 접속되었다면 <EM>알파벳 B</EM> 키를 눌러 Download 단추를 찾으세요.\r\n          </Li>\r\n          <Li>\r\n            초점이 Download 단추에 있다면 <EM>Enter</EM> 키를 눌러 다운로드를 시작하세요.  다운로드가 완료되었다는 안내 음성이 들리면 <EM>F6</EM>을 눌러 \r\n            다운로드 표시줄로 이동합니다.\r\n          </Li>\r\n          <Li>\r\n            다운로드 표시줄로 이동하면 <EM>파일이름, 그룹</EM>이 나오며,\r\n            <EM>아래 화살표</EM>키를 누르면 파일 열기 단추에 초점이 이동됩니다. 파일 열기 단추를 <EM>Enter</EM> 키로 눌러주세요.\r\n          </Li>\r\n        </Ul>\r\n        또는\r\n        <Ul>\r\n          <Li>\r\n            Download 페이지에 접속되었다면 <EM>알파벳 B</EM> 키를 눌러 Download 단추를 찾으세요.\r\n          </Li>\r\n          <Li>\r\n            초점이 Download 단추에 있다면 <EM>Enter</EM> 키를 눌러 다운로드를 시작하세요.\r\n          </Li>\r\n          <Li>\r\n          다운로드가 완료되었다는 안내 음성이 들리면 <EM>Control</EM> + <EM>알파벳 J</EM> 키를 눌러 다운로드 탭을 엽니다.</Li>\r\n          <Li><EM>숫자 3</EM> 키(<span class=\"text bold\">F1 아래 있는 숫자 키</span>)를 눌러 오늘 날짜와 동일한 제목 수준 3을 찾으세요.\r\n           (예: 2021년 n월 n일, 제목 수준 3)</Li>\r\n          <Li>\r\n            <EM>Tab</EM> 키를 눌러보세요. 다운로드가 잘 되었다면 가장 첫 번째 항목으로 가장 최근에 다운로드 된 NVDA 파일 단추가 나타납니다.\r\n             다운로드가 잘 되었다면 파일명 단추를 <EM>Enter</EM> 키로 실행해주세요.\r\n          </Li>\r\n        </Ul>\r\n      </section>\r\n      <section>\r\n        <h5>STEP 3: NVDA 설치 및 초기 설정 진행하기</h5>\r\n        <Ul>\r\n          <Li>\r\n            NVDA 설치 인트로 사운드가 재생되며, 인트로 사운드가 끝나면 대화상자가 나타납니다.\r\n            이제부터 내레이터 없이 설치를 진행할 수 있습니다. <EM>Capslock</EM> 또는 <EM>Insert</EM> 키와 <EM>ESC</EM> 키를 눌러\r\n            내레이터를 끝내고 설치를 진행하세요.\r\n          </Li>\r\n          <Li>\r\n            약관 동의 읽기 전용 편집창이 나타나면 <EM>Tab</EM> 키를 눌러 <strong>동의함 (A)</strong> 체크 상자에 초점을 이동하고,  <EM>Space</EM>키를 눌러 체크합니다.\r\n          </Li>\r\n          <Li>\r\n            <EM>Tab</EM> 키를 눌러 <strong>컴퓨터에 NVDA 설치 (I)</strong> 단추를 찾아 <EM>Enter</EM> 키로 누르세요.\r\n          </Li>\r\n          <Li>\r\n            <EM>NVDA 설치 대화상자</EM>가 표시됩니다. 대화상자 내에 있는 대부분의 설정값은 따로 체크 해제하거나 체크할 필요가 없습니다. <EM>Enter</EM> 키를 눌러 설치를 완료하세요.\r\n          </Li>\r\n          <Li>설치 과정을 완료하면 NVDA가 다시 실행되며 NVDA 시작 대화상자가 표시됩니다. NVDA 시작 대화상자에서는 다음과 같은 기초 설정을 진행할 수 있습니다.</Li>\r\n          <Li>\r\n            <strong>키보드 레이아웃 (K) 콤보상자</strong>는 왼쪽에 숫자 패드가 있는 데스크탑용 키보드를 사용하는지, 숫자 패드가 없는 \r\n            노트북 키보드나 87키 키보드를 사용하는지를 설정할 수 있습니다. 이 설정에 따라 NVDA의 단축키가 바뀝니다. \r\n            기본값은 Desktop이며, 넘버패드가 없는 키보드나 노트북을 사용중이라면 Laptop으로 바꾸는 것을 추천합니다.\r\n          </Li>\r\n          <Li>\r\n            <strong>로그인 후에 NVDA 시작 (A)</strong>는 Windows 시작 프로그램에 NVDA를 등록할 지를 설정합니다.\r\n            기본값으로 체크되어 있습니다. NVDA를 주로 쓰지 않고, 다른 스크린리더를 함꼐 쓴다면 해제하는 것을 추천하나, NVDA를 주로 쓸 것이라면 체크하세요.\r\n          </Li>\r\n          <Li>\r\n            <strong>NVDA 시작 시 이 대화상자 표시</strong>는 말 그대로 NVDA 시작 대화상자를 NVDA가 켜질 때 마다 표시할 것인지를 \r\n            결정합니다. 기본값으로는 체크되어 있으며, NVDA 시작 시 이 대화상자를 보는 것이 싫다면 해제하세요.\r\n          </Li>\r\n        </Ul>\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst VersionDownloader = () => {\r\n  const typeCheck = /(2[\\d]{3})?\\.+(\\d{1,2})?\\.?([\\d]{1,2})?$/\r\n  const allowChar = /^[\\d\\.]$/\r\n  let inputValue;\r\n  let [isUrlAvailable,setUrlAvailable] = useState(true);\r\n  let [getButtonDisabledState,setButtonDisabled] = useState(true);\r\n  let vYear;\r\n  let vSubMajor;\r\n  \r\n  const announcement = (text,\r\n    element = document.querySelector('#validation-announcer'))=>{\r\n    let runnable;\r\n    clearTimeout(runnable);\r\n    element.innerHTML = '';\r\n    runnable = setTimeout(()=>{\r\n      element.innerHTML=text;\r\n    },150);\r\n  }\r\n\r\n  function checkInput(evt){\r\n    const e = evt.nativeEvent;\r\n    const target = e.target;\r\n    const data = e.data;\r\n    const isAllowedChar = allowChar.test( data );\r\n    const TextStructure = typeCheck.exec( target.value );\r\n    vYear = TextStructure && TextStructure[1] ? TextStructure[1] : null;\r\n    vSubMajor = TextStructure && TextStructure[2] ? TextStructure[2] : null;\r\n\r\n    if(data !== null && !isAllowedChar){\r\n      e.target.value = inputValue.substring(0,target.value.length-1);\r\n\r\n      announcement(`\r\n      <span class=\"text color-error\">\r\n      입력 오류: 숫자와 마침표만 입력 가능합니다.\r\n      </span>\r\n      `)\r\n    }\r\n\r\n    if(\r\n      (/[^.]$/.test(target.value) &&\r\n      vYear && vSubMajor)\r\n    ){\r\n      inputValue = e.target.value;\r\n      setUrlAvailable(true);\r\n      setButtonDisabled(!isUrlAvailable);\r\n      announcement(`\r\n      <span class=\"text color-success\">\r\n      규칙 일치: 버전 규칙과 일치합니다. Enter를 눌러 다운로드를 시도할 수 있습니다.\r\n      </span>`)\r\n    }else{\r\n      setUrlAvailable(true);\r\n      setButtonDisabled(!isUrlAvailable);\r\n    }\r\n  }\r\n\r\n  const checkManually = (evt)=>{\r\n    const e = evt.nativeEvent;\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const TextStructure = typeCheck.exec( value );\r\n    vYear = TextStructure && TextStructure[1] ? TextStructure[1] : null;\r\n    vSubMajor = TextStructure && TextStructure[2] ? TextStructure[2] : null;\r\n    if (\r\n      vYear !== null && vSubMajor !== null\r\n    ) {\r\n        inputValue = value;\r\n        setUrlAvailable(true);\r\n        setButtonDisabled(!isUrlAvailable);\r\n        announcement(`\r\n        <span class=\"text color-success\">\r\n        규칙 일치: 버전 규칙과 일치합니다. Enter를 눌러 다운로드를 시도할 수 있습니다.\r\n        </span>`)\r\n      }else{\r\n        setUrlAvailable(false);\r\n        setButtonDisabled(!isUrlAvailable);\r\n        announcement(``);\r\n      }\r\n  }\r\n\r\n  const startDownload = (e)=>{\r\n    const eventType = e.nativeEvent.type;\r\n    \r\n    if(\r\n      eventType === 'keydown' && e.key === 'Enter' || eventType === 'click'\r\n    ){\r\n      if(isUrlAvailable){\r\n        inputValue = document.querySelector('#version-downloader').value;\r\n        window.open(`https://www.nvaccess.org/download/nvda/releases/${inputValue}/nvda_${inputValue}.exe`);\r\n        announcement(``);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (<div className=\"version-downloader\">\r\n    <label htmlFor=\"version-downloader\">NVDA 버전 선택 다운로드 도우미</label>\r\n    <input aria-describedby=\"desc-version-downloader\" placeholder=\"숫자, 마침표로 버전명 입력\"\r\n    type=\"text\" id=\"version-downloader\"\r\n    onInput={checkInput}\r\n    onFocus={checkManually}\r\n    onKeyDown={startDownload}\r\n    onBlur={checkManually} />\r\n    <button className=\"fency-button\" id=\"submit_version_input\" onClick={startDownload}\r\n    disabled={getButtonDisabledState}>다운로드 도우미 실핼</button>\r\n    <p id=\"validation-announcer\" aria-live=\"polite\"></p>\r\n    <p id=\"desc-version-downloader\">\r\n      \"2020.1\"와 같이 버전명을 올바르게 입력하고 Enter를 누르면 다운로드가 시작됩니다.\r\n    </p>\r\n  </div>)\r\n}\r\n\r\nexport {DownloadPage};","import Home,{SubPage as HomeSub} from \"./page.home\";\r\nimport About from \"./page.about\";\r\nimport AboutForum from \"./page.forum\";\r\nimport {DownloadPage as Download} from \"./page.down\";\r\nimport PageNotFound from './page.NotFound';\r\n\r\nconst MainRoute = () => {\r\n  return [\r\n    {\r\n      component:Home,\r\n      to:\"/home\",\r\n      path:\"home\",\r\n      title:'NVDA 한국 - 홈',\r\n      menuText:\"홈\"\r\n    },\r\n\r\n    {\r\n      component:About,\r\n      to:\"/about\",\r\n      path:\"about\",\r\n      title:\"NVDA 한국 - NVDA 소개\",\r\n      menuText:\"NVDA 소개\"\r\n    },\r\n    {\r\n      component:Download,\r\n      to:\"/download\",\r\n      path:\"download\",\r\n      title:\"NVDA 한국 - 다운로드\",\r\n      menuText:\"다운로드\"\r\n    },\r\n\r\n    {\r\n      component:AboutForum,\r\n      to:\"/forum\",\r\n      path:\"forum\",\r\n      title:'NVDA 한국 - 홈 > 포럼 소개',\r\n      menuText:\"포럼\"\r\n    },\r\n    {\r\n      component:PageNotFound,\r\n      to:\"/NotFound_404\",\r\n      path:\"NotFound_404\",\r\n      title:'NVDA 한국 - 홈 > 포럼 소개',\r\n    }\r\n  ]\r\n}\r\n\r\n\r\nconst HomeRoute = (url) =>{\r\n  return [\r\n  {\r\n    component:HomeSub.AboutPage,\r\n    to:`${url}/aboutPage`,\r\n    path:'aboutPage',\r\n    menuText:'페이지 소개',\r\n    title:'NVDA 한국 - 홈 > 페이지 소개',\r\n  },\r\n  {\r\n    component:HomeSub.AboutSR,\r\n    to:`${url}/aboutSR`,\r\n    path:'aboutSR',\r\n    menuText:'스크린리더',\r\n    title:'NVDA 한국 - 홈 > 스크린리더',\r\n  }\r\n  ]\r\n}\r\n\r\nexport {MainRoute,HomeRoute}","import TopBar from \"./pageTopBar\";\r\nimport BottomBar from \"./pageBottomBar\";\r\nconst Landmarks = {\r\n  TopBar,\r\n  BottomBar\r\n}\r\n\r\nexport default Landmarks;","import {Navigation} from \"./Navigation\";\r\nimport {Link} from 'react-router-dom';\r\nimport { MainRoute } from \"../page/info.PageRoute\";\r\n\r\nconst TopBar = ()=>{\r\n  return (\r\n<div className=\"layout-bar common-tops\">\r\n    <header>\r\n    <div className=\"header-title\">\r\n      <h1>\r\n        <Link to=\"/\" id=\"header_start\">\r\n          <span aria-hidden=\"true\" className=\"icon-nvda\"></span>NVDA 한국\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n    <div className=\"header-navigation\">\r\n      <nav>\r\n        <h2 className=\"invisible-a11y\">전체 메뉴</h2>\r\n        <Navigation PageList={MainRoute()} />\r\n      </nav>\r\n    </div>\r\n    </header>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default TopBar;","const BottomBar = () =>{\r\n  return (\r\n    <div className=\"layout-bar common-bottoms\">\r\n      <footer>\r\n        &copy;2021 NVDA Korean Users Forum\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\nexport default BottomBar;","import { useEffect, useState } from \"react\"\r\n\r\nconst RegionShuttleLink = ({\r\n    DestinationHash,\r\n    children,\r\n    LinkId\r\n}) => {\r\n    return (\r\n        <a href={DestinationHash}\r\n        id={LinkId ? LinkId : null} className=\"region-shuttle-link\">{children}</a>\r\n    )\r\n}\r\n\r\nconst SkipNavigation = () => {\r\n    const [isFocusIn,setFocusIn] = useState(false);\r\n\r\n    const getFocusInStateClass = isFocusIn ? '' : \"invisible-a11y out\";\r\n\r\n    useEffect(()=>{\r\n        const topLayout = document.querySelector('.layout-bar.common-tops');\r\n        topLayout.classList.toggle('skip-shown',isFocusIn);\r\n    },[isFocusIn])\r\n\r\n    const showLink = () => {\r\n        setFocusIn(true);\r\n    }\r\n    const hideLink = () => {\r\n        setFocusIn(false);\r\n    }\r\n\r\n    return (\r\n        <div className={`floating-area skipNav ${getFocusInStateClass}`}>\r\n            <a id=\"skipTo-main\" href=\"#main_content\"\r\n            onFocus={showLink} onBlur={hideLink}>본문으로 바로가기</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {RegionShuttleLink,SkipNavigation};","import './res/styles/app.layout.scss';\r\nimport Landmarks from \"./common_components\";\r\nimport {MainRoute} from './page/info.PageRoute'\r\nimport {Redirect,Route, Switch} from 'react-router';\r\nimport Pager from './page/PageRouter';\r\nimport { RegionShuttleLink, SkipNavigation } from './common_components/RegionShuttle';\r\nimport { A11yText } from './common_components/textFormat';\r\nfunction App() {\r\n  return (\r\n    <div className=\"page-wrapper\">\r\n      <SkipNavigation />\r\n      <Landmarks.TopBar />\r\n      <div className=\"layout-middle-wrapper\">\r\n      <main tabIndex=\"-1\" id=\"main_content\">\r\n        {/* <Redirect from=\"/\" exact to=\"/home/aboutPage\" />\r\n        <Redirect from=\"/home\" exact to=\"/home/aboutPage\" /> */}\r\n        <Switch>\r\n          <Redirect path=\"/\" exact to=\"/home\" />\r\n          <Redirect path=\"/home\" exact to=\"/home/aboutPage\" />\r\n          <Route path=\"/:path\">\r\n            <Pager PageList={MainRoute()} />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n      <div className=\"floating-area fixed right bottom margin\">\r\n        <RegionShuttleLink LinkId=\"goTo-pageTop\" DestinationHash=\"#skipTo-main\">\r\n          <span aria-hidden={true} className=\"text normal\">\r\n            ▲\r\n          </span>\r\n          <span aria-hidden={true} className=\"text smaller\">\r\n            TOP\r\n          </span>\r\n          <A11yText>\r\n            페이지 맨 위로 이동\r\n          </A11yText>\r\n        </RegionShuttleLink>\r\n      </div>\r\n      </div>\r\n      <Landmarks.BottomBar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './res/styles/app.initialize.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}